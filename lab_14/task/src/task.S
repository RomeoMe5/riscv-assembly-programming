.section .text
.global main

main:
    # Пролог функции
    addi sp, sp, -32
    sw ra, 28(sp)    # Сохранение адреса возврата
    sw s0, 24(sp)    # Сохранение s0

    # Выделить буфер на стеке (8 байт)
    addi s0, sp, 16  # s0 указывает на начало буфера (смещение 16 байт)

    # Вывести приглашение для ввода
    la a0, prompt
    call puts

    # Читать ввод в буфер с помощью read (без проверки длины)
    li a7, 63        # Системный вызов read
    li a0, 0         # Файловый дескриптор stdin
    mv a1, s0        # Адрес буфера
    li a2, 32        # Максимальная длина (чтобы гарантировать переполнение)
    ecall

    # Вывести введённые данные
    mv a0, s0
    call puts

    # Эпилог функции
    lw s0, 24(sp)
    lw ra, 28(sp)
    addi sp, sp, 32
    # Выход из программы
    li a7, 93        # Системный вызов exit
    li a0, 0         # Код возврата 0
    ecall

.section .rodata
prompt: .string "Enter input: "

# Внешние функции из libc
.global puts
